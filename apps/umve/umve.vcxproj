<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{56C3608A-CB79-3F19-9CE7-4A1B63F2A1D6}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>umve</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">umve.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">umve</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">umve.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">umve</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">umve.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">umve</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">umve.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">umve</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR="Debug";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR=\"Debug\";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\..\3rdparty\lib\Qt5OpenGLd.lib;..\..\..\3rdparty\lib\Qt5Svgd.lib;..\..\..\3rdparty\lib\Qt5Widgetsd.lib;opengl32.lib;glu32.lib;..\..\libs\dmrecon\Debug\mve_dmrecon_d.lib;..\..\libs\mve\Debug\mve_d.lib;..\..\libs\ogl\Debug\mve_ogl_d.lib;..\..\libs\util\Debug\mve_util_d.lib;..\..\libs\sfm\Debug\mve_sfm_d.lib;..\..\..\3rdparty\lib\glew32d.lib;..\..\..\3rdparty\lib\Qt5Guid.lib;..\..\..\3rdparty\lib\Qt5Cored.lib;..\..\..\3rdparty\lib\glew32d.lib;..\..\libs\mve\Debug\mve_d.lib;..\..\..\3rdparty\lib\jpegd.lib;..\..\..\3rdparty\lib\libpng16d.lib;..\..\..\3rdparty\lib\zlibd.lib;..\..\..\3rdparty\lib\tiffd.lib;..\..\libs\util\Debug\mve_util_d.lib;..\..\libs\math\Debug\mve_math_d.lib;opengl32.lib;glu32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/MVE/mve_build/apps/umve/Debug/umve.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/MVE/mve_build/apps/umve/Debug/umve.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR="Release";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR=\"Release\";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\..\3rdparty\lib\Qt5OpenGL.lib;..\..\..\3rdparty\lib\Qt5Svg.lib;..\..\..\3rdparty\lib\Qt5Widgets.lib;opengl32.lib;glu32.lib;..\..\libs\dmrecon\Release\mve_dmrecon.lib;..\..\libs\mve\Release\mve.lib;..\..\libs\ogl\Release\mve_ogl.lib;..\..\libs\util\Release\mve_util.lib;..\..\libs\sfm\Release\mve_sfm.lib;..\..\..\3rdparty\lib\glew32.lib;..\..\..\3rdparty\lib\Qt5Gui.lib;..\..\..\3rdparty\lib\Qt5Core.lib;..\..\..\3rdparty\lib\glew32.lib;..\..\libs\mve\Release\mve.lib;D:\Anaconda3\Library\lib\libjpeg.lib;D:\Anaconda3\Library\lib\libpng.lib;..\..\..\3rdparty\lib\zlib.lib;..\..\..\3rdparty\lib\tiff.lib;..\..\libs\util\Release\mve_util.lib;..\..\libs\math\Release\mve_math.lib;opengl32.lib;glu32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/MVE/mve_build/apps/umve/Release/umve.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/MVE/mve_build/apps/umve/Release/umve.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR="MinSizeRel";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR=\"MinSizeRel\";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\..\3rdparty\lib\Qt5OpenGL.lib;..\..\..\3rdparty\lib\Qt5Svg.lib;..\..\..\3rdparty\lib\Qt5Widgets.lib;opengl32.lib;glu32.lib;..\..\libs\dmrecon\MinSizeRel\mve_dmrecon.lib;..\..\libs\mve\MinSizeRel\mve.lib;..\..\libs\ogl\MinSizeRel\mve_ogl.lib;..\..\libs\util\MinSizeRel\mve_util.lib;..\..\libs\sfm\MinSizeRel\mve_sfm.lib;..\..\..\3rdparty\lib\glew32d.lib;..\..\..\3rdparty\lib\Qt5Gui.lib;..\..\..\3rdparty\lib\Qt5Core.lib;..\..\..\3rdparty\lib\glew32d.lib;..\..\libs\mve\MinSizeRel\mve.lib;D:\Anaconda3\Library\lib\libjpeg.lib;D:\Anaconda3\Library\lib\libpng.lib;..\..\..\3rdparty\lib\zlib.lib;..\..\..\3rdparty\lib\tiff.lib;..\..\libs\util\MinSizeRel\mve_util.lib;..\..\libs\math\MinSizeRel\mve_math.lib;opengl32.lib;glu32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/MVE/mve_build/apps/umve/MinSizeRel/umve.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/MVE/mve_build/apps/umve/MinSizeRel/umve.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR="RelWithDebInfo";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;WIN32_LEAN_AND_MEAN;VC_EXTRALEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_OPENGL_LIB;QT_WIDGETS_LIB;QT_SVG_LIB;CMAKE_INTDIR=\"RelWithDebInfo\";umve_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\MVE\libs;F:\MVE\apps\umve;F:\MVE\3rdparty\include;F:\MVE\3rdparty\include\QtCore;F:\MVE\3rdparty\.\mkspecs\win32-msvc2017;F:\MVE\3rdparty\include\QtGui;F:\MVE\3rdparty\include\QtOpenGL;F:\MVE\3rdparty\include\QtWidgets;F:\MVE\3rdparty\include\QtSvg;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\..\3rdparty\lib\Qt5OpenGL.lib;..\..\..\3rdparty\lib\Qt5Svg.lib;..\..\..\3rdparty\lib\Qt5Widgets.lib;opengl32.lib;glu32.lib;..\..\libs\dmrecon\RelWithDebInfo\mve_dmrecon.lib;..\..\libs\mve\RelWithDebInfo\mve.lib;..\..\libs\ogl\RelWithDebInfo\mve_ogl.lib;..\..\libs\util\RelWithDebInfo\mve_util.lib;..\..\libs\sfm\RelWithDebInfo\mve_sfm.lib;..\..\..\3rdparty\lib\glew32d.lib;..\..\..\3rdparty\lib\Qt5Gui.lib;..\..\..\3rdparty\lib\Qt5Core.lib;..\..\..\3rdparty\lib\glew32d.lib;..\..\libs\mve\RelWithDebInfo\mve.lib;D:\Anaconda3\Library\lib\libjpeg.lib;D:\Anaconda3\Library\lib\libpng.lib;..\..\..\3rdparty\lib\zlib.lib;..\..\..\3rdparty\lib\tiff.lib;..\..\libs\util\RelWithDebInfo\mve_util.lib;..\..\libs\math\RelWithDebInfo\mve_math.lib;opengl32.lib;glu32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/MVE/mve_build/apps/umve/RelWithDebInfo/umve.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/MVE/mve_build/apps/umve/RelWithDebInfo/umve.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_batchoperations.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_batchoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_batchoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\batchoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_batchoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_batchoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_batchoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\batchoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_batchoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_batchoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_batchoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\batchoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_batchoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_batchoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_batchoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\batchoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_batchoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_clickimage.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_clickimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_clickimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\clickimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_clickimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_clickimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_clickimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\clickimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_clickimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_clickimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_clickimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\clickimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_clickimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_clickimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_clickimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\clickimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_clickimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_dlldefines.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_dlldefines.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_dlldefines.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\dlldefines.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_dlldefines.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_dlldefines.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_dlldefines.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\dlldefines.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_dlldefines.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_dlldefines.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_dlldefines.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\dlldefines.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_dlldefines.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_dlldefines.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_dlldefines.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\dlldefines.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_dlldefines.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_fshelpers.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_fshelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_fshelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\fshelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_fshelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_fshelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_fshelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\fshelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_fshelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_fshelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_fshelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\fshelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_fshelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_fshelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_fshelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\fshelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_fshelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_glwidget.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_glwidget.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_glwidget.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\glwidget.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_glwidget.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_glwidget.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_glwidget.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\glwidget.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_glwidget.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_glwidget.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_glwidget.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\glwidget.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_glwidget.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_glwidget.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_glwidget.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\glwidget.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_glwidget.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_guihelpers.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_guihelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_guihelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\guihelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_guihelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_guihelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_guihelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\guihelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_guihelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_guihelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_guihelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\guihelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_guihelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_guihelpers.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_guihelpers.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\guihelpers.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_guihelpers.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_jobqueue.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_jobqueue.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_jobqueue.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\jobqueue.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_jobqueue.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_jobqueue.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_jobqueue.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\jobqueue.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_jobqueue.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_jobqueue.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_jobqueue.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\jobqueue.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_jobqueue.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_jobqueue.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_jobqueue.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\jobqueue.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_jobqueue.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_mainwindow.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_mainwindow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\mainwindow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_mainwindow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\mainwindow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_mainwindow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\mainwindow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_mainwindow.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindow.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\mainwindow.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_mainwindowtab.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_mainwindowtab.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindowtab.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\mainwindowtab.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindowtab.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_mainwindowtab.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindowtab.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\mainwindowtab.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindowtab.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_mainwindowtab.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindowtab.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\mainwindowtab.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindowtab.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_mainwindowtab.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_mainwindowtab.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\mainwindowtab.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_mainwindowtab.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_aabb_creator.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_aabb_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_aabb_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_aabb_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_aabb_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_aabb_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_aabb_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_aabb_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_aabb_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_aabb_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_aabb_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_aabb_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_aabb_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_aabb_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_aabb_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_aabb_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_aabb_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_axis_renderer.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_axis_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_axis_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_axis_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_axis_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_axis_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_axis_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_axis_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_axis_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_axis_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_axis_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_axis_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_axis_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_axis_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_axis_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_axis_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_axis_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_base.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_dm_triangulate.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_dm_triangulate.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_dm_triangulate.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_dm_triangulate.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_dm_triangulate.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_dm_triangulate.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_dm_triangulate.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_dm_triangulate.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_dm_triangulate.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_dm_triangulate.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_dm_triangulate.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_dm_triangulate.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_dm_triangulate.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_dm_triangulate.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_dm_triangulate.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_dm_triangulate.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_dm_triangulate.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_frusta_base.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_frusta_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_frusta_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_frusta_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_frusta_base.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_base.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_base.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_base.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_frusta_scene_renderer.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_frusta_scene_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_scene_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_scene_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_scene_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_frusta_scene_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_scene_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_scene_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_scene_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_frusta_scene_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_scene_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_scene_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_scene_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_frusta_scene_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_frusta_scene_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_frusta_scene_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_scene_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_mesh_renderer.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_mesh_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_mesh_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_mesh_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_mesh_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_mesh_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_mesh_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_mesh_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_mesh_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_mesh_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_mesh_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_mesh_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_mesh_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_mesh_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_mesh_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_mesh_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_mesh_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_offscreen_renderer.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_offscreen_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_offscreen_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_offscreen_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_offscreen_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_offscreen_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_offscreen_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_offscreen_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_offscreen_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_offscreen_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_offscreen_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_offscreen_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_offscreen_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_offscreen_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_offscreen_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_offscreen_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_offscreen_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_plane_creator.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_plane_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_plane_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_plane_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_plane_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_plane_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_plane_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_plane_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_plane_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_plane_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_plane_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_plane_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_plane_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_plane_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_plane_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_plane_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_plane_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_rephotographer.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_rephotographer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_rephotographer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_rephotographer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_rephotographer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_rephotographer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_rephotographer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_rephotographer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_rephotographer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_rephotographer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_rephotographer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_rephotographer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_rephotographer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_rephotographer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_rephotographer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_rephotographer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_rephotographer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_selection.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_selection.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_selection.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_selection.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_selection.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_selection.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_selection.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_selection.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_selection.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_selection.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_selection.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_selection.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_selection.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_selection.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_selection.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_selection.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_selection.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_sfm_renderer.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_sfm_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sfm_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_sfm_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sfm_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_sfm_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sfm_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_sfm_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sfm_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_sfm_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sfm_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_sfm_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sfm_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_sfm_renderer.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sfm_renderer.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_sfm_renderer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sfm_renderer.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_sphere_creator.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_sphere_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sphere_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_sphere_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sphere_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_sphere_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sphere_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_sphere_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sphere_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_sphere_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sphere_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_sphere_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sphere_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_sphere_creator.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_sphere_creator.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_sphere_creator.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sphere_creator.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_addin_state.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_addin_state.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_state.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\addin_state.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_state.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_addin_state.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_state.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\addin_state.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_state.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_addin_state.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_state.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\addin_state.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_state.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_addin_state.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_addin_state.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\addin_state.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_state.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_camera_sequence.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_camera_sequence.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_camera_sequence.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\camera_sequence.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_camera_sequence.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_camera_sequence.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_camera_sequence.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\camera_sequence.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_camera_sequence.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_camera_sequence.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_camera_sequence.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\camera_sequence.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_camera_sequence.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_camera_sequence.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_camera_sequence.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\camera_sequence.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_camera_sequence.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\c024801f4a4d778555a4e6735e6c2fac\moc_mesh_list.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_addins/moc_mesh_list.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_mesh_list.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_addins\mesh_list.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_mesh_list.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_addins/moc_mesh_list.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_mesh_list.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_addins\mesh_list.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_mesh_list.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_addins/moc_mesh_list.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_mesh_list.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_addins\mesh_list.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_mesh_list.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_addins/moc_mesh_list.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_addins
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_addins/moc_mesh_list.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_addins\mesh_list.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_addins\moc_mesh_list.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\28ce581bec58e23ac26199e1fd48d026\moc_addin_manager.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_inspect/moc_addin_manager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_addin_manager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_inspect\addin_manager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_addin_manager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_inspect/moc_addin_manager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_addin_manager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_inspect\addin_manager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_addin_manager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_inspect/moc_addin_manager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_addin_manager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_inspect\addin_manager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_addin_manager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_inspect/moc_addin_manager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_addin_manager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_inspect\addin_manager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_addin_manager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\28ce581bec58e23ac26199e1fd48d026\moc_scene_inspect.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating scene_inspect/moc_scene_inspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_scene_inspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scene_inspect\scene_inspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_scene_inspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating scene_inspect/moc_scene_inspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_scene_inspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scene_inspect\scene_inspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_scene_inspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating scene_inspect/moc_scene_inspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_scene_inspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scene_inspect\scene_inspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_scene_inspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating scene_inspect/moc_scene_inspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\scene_inspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/scene_inspect/moc_scene_inspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scene_inspect\scene_inspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\scene_inspect\moc_scene_inspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_scenemanager.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_scenemanager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_scenemanager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\scenemanager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_scenemanager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_scenemanager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_scenemanager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\scenemanager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_scenemanager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_scenemanager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_scenemanager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\scenemanager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_scenemanager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_scenemanager.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_scenemanager.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\scenemanager.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_scenemanager.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_sceneoverview.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_sceneoverview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_sceneoverview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\sceneoverview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_sceneoverview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_sceneoverview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_sceneoverview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\sceneoverview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_sceneoverview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_sceneoverview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_sceneoverview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\sceneoverview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_sceneoverview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_sceneoverview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_sceneoverview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\sceneoverview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_sceneoverview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\a788545e0445db800c223e22e02a95e9\moc_selectedview.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating moc_selectedview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_selectedview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\selectedview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\moc_selectedview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating moc_selectedview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_selectedview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\selectedview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\moc_selectedview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating moc_selectedview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_selectedview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\selectedview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\moc_selectedview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating moc_selectedview.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/moc_selectedview.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\selectedview.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\moc_selectedview.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\f3fceb59d6e9c6d326cab8fc220f9f39\moc_imageinspector.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating viewinspect/moc_imageinspector.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageinspector.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\viewinspect\imageinspector.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageinspector.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating viewinspect/moc_imageinspector.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageinspector.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\viewinspect\imageinspector.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageinspector.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating viewinspect/moc_imageinspector.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageinspector.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\viewinspect\imageinspector.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageinspector.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating viewinspect/moc_imageinspector.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageinspector.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\viewinspect\imageinspector.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageinspector.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\f3fceb59d6e9c6d326cab8fc220f9f39\moc_imageoperations.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating viewinspect/moc_imageoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\viewinspect\imageoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating viewinspect/moc_imageoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\viewinspect\imageoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating viewinspect/moc_imageoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\viewinspect\imageoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating viewinspect/moc_imageoperations.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_imageoperations.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\viewinspect\imageoperations.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_imageoperations.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\f3fceb59d6e9c6d326cab8fc220f9f39\moc_scrollimage.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating viewinspect/moc_scrollimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_scrollimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\viewinspect\scrollimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_scrollimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating viewinspect/moc_scrollimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_scrollimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\viewinspect\scrollimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_scrollimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating viewinspect/moc_scrollimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_scrollimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\viewinspect\scrollimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_scrollimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating viewinspect/moc_scrollimage.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_scrollimage.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\viewinspect\scrollimage.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_scrollimage.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\f3fceb59d6e9c6d326cab8fc220f9f39\moc_tonemapping.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating viewinspect/moc_tonemapping.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_tonemapping.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\viewinspect\tonemapping.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_tonemapping.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating viewinspect/moc_tonemapping.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_tonemapping.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\viewinspect\tonemapping.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_tonemapping.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating viewinspect/moc_tonemapping.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_tonemapping.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\viewinspect\tonemapping.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_tonemapping.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating viewinspect/moc_tonemapping.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_tonemapping.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\viewinspect\tonemapping.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_tonemapping.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\mve_build\CMakeFiles\f3fceb59d6e9c6d326cab8fc220f9f39\moc_viewinspect.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating viewinspect/moc_viewinspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_viewinspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\viewinspect\viewinspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_viewinspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating viewinspect/moc_viewinspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_viewinspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\viewinspect\viewinspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_viewinspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating viewinspect/moc_viewinspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_viewinspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\viewinspect\viewinspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_viewinspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating viewinspect/moc_viewinspect.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd F:\MVE\mve_build\apps\umve\viewinspect
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
F:\MVE\3rdparty\bin\moc.exe @F:/MVE/mve_build/apps/umve/viewinspect/moc_viewinspect.cpp_parameters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\viewinspect\viewinspect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\viewinspect\moc_viewinspect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\apps\umve\umve.qrc">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating qrc_umve.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
..\..\..\3rdparty\bin\rcc.exe --name umve --output F:/MVE/mve_build/apps/umve/qrc_umve.cpp F:/MVE/apps/umve/umve.qrc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\apps\umve\images\icon_exit.svg;F:\MVE\apps\umve\images\icon_copy.svg;F:\MVE\apps\umve\images\icon_delete.svg;F:\MVE\apps\umve\images\icon_save.svg;F:\MVE\apps\umve\images\icon_about.svg;F:\MVE\apps\umve\images\icon_revert.svg;F:\MVE\apps\umve\images\icon_open_file.svg;F:\MVE\apps\umve\images\icon_image_inspect.svg;F:\MVE\apps\umve\images\icon_export_ply.svg;F:\MVE\apps\umve\images\icon_zoom_in.svg;F:\MVE\apps\umve\images\icon_zoom_out.svg;F:\MVE\apps\umve\images\icon_zoom_reset.svg;F:\MVE\apps\umve\images\icon_zoom_page.svg;F:\MVE\apps\umve\images\icon_exec.svg;F:\MVE\apps\umve\images\icon_new_dir.svg;F:\MVE\apps\umve\images\icon_close.svg;F:\MVE\apps\umve\images\icon_broken.svg;F:\MVE\apps\umve\images\icon_toolbox.svg;F:\MVE\apps\umve\images\icon_clean.svg;F:\MVE\apps\umve\images\icon_export.svg;F:\MVE\apps\umve\images\icon_small_minus.png;F:\MVE\apps\umve\images\icon_small_plus.png;F:\MVE\apps\umve\images\icon_large_minus.png;F:\MVE\apps\umve\images\icon_large_plus.png;F:\MVE\apps\umve\images\icon_screenshot.svg;F:\MVE\apps\umve\images\icon_file.svg;F:\MVE\apps\umve\images\icon_folder.svg;F:\MVE\apps\umve\images\icon_player_eject.svg;F:\MVE\apps\umve\images\icon_player_end.svg;F:\MVE\apps\umve\images\icon_player_fwd.svg;F:\MVE\apps\umve\images\icon_player_pause.svg;F:\MVE\apps\umve\images\icon_player_play.svg;F:\MVE\apps\umve\images\icon_player_record.svg;F:\MVE\apps\umve\images\icon_player_rew.svg;F:\MVE\apps\umve\images\icon_player_start.svg;F:\MVE\apps\umve\images\icon_player_stop.svg;F:\MVE\apps\umve\images\icon_eye.svg;F:\MVE\apps\umve\images\icon_video.svg;F:\MVE\apps\umve\images\icon_refresh.svg;F:\MVE\apps\umve\images\icon_new_file.svg;F:\MVE\apps\umve\images\icon_window.png;F:\MVE\apps\umve\shaders\surface_330.frag;F:\MVE\apps\umve\shaders\surface_330.vert;F:\MVE\apps\umve\shaders\texture_330.frag;F:\MVE\apps\umve\shaders\texture_330.vert;F:\MVE\apps\umve\shaders\wireframe_330.frag;F:\MVE\apps\umve\shaders\wireframe_330.vert;F:\MVE\apps\umve\shaders\overlay_330.frag;F:\MVE\apps\umve\shaders\overlay_330.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\qrc_umve.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating qrc_umve.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
..\..\..\3rdparty\bin\rcc.exe --name umve --output F:/MVE/mve_build/apps/umve/qrc_umve.cpp F:/MVE/apps/umve/umve.qrc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\apps\umve\images\icon_exit.svg;F:\MVE\apps\umve\images\icon_copy.svg;F:\MVE\apps\umve\images\icon_delete.svg;F:\MVE\apps\umve\images\icon_save.svg;F:\MVE\apps\umve\images\icon_about.svg;F:\MVE\apps\umve\images\icon_revert.svg;F:\MVE\apps\umve\images\icon_open_file.svg;F:\MVE\apps\umve\images\icon_image_inspect.svg;F:\MVE\apps\umve\images\icon_export_ply.svg;F:\MVE\apps\umve\images\icon_zoom_in.svg;F:\MVE\apps\umve\images\icon_zoom_out.svg;F:\MVE\apps\umve\images\icon_zoom_reset.svg;F:\MVE\apps\umve\images\icon_zoom_page.svg;F:\MVE\apps\umve\images\icon_exec.svg;F:\MVE\apps\umve\images\icon_new_dir.svg;F:\MVE\apps\umve\images\icon_close.svg;F:\MVE\apps\umve\images\icon_broken.svg;F:\MVE\apps\umve\images\icon_toolbox.svg;F:\MVE\apps\umve\images\icon_clean.svg;F:\MVE\apps\umve\images\icon_export.svg;F:\MVE\apps\umve\images\icon_small_minus.png;F:\MVE\apps\umve\images\icon_small_plus.png;F:\MVE\apps\umve\images\icon_large_minus.png;F:\MVE\apps\umve\images\icon_large_plus.png;F:\MVE\apps\umve\images\icon_screenshot.svg;F:\MVE\apps\umve\images\icon_file.svg;F:\MVE\apps\umve\images\icon_folder.svg;F:\MVE\apps\umve\images\icon_player_eject.svg;F:\MVE\apps\umve\images\icon_player_end.svg;F:\MVE\apps\umve\images\icon_player_fwd.svg;F:\MVE\apps\umve\images\icon_player_pause.svg;F:\MVE\apps\umve\images\icon_player_play.svg;F:\MVE\apps\umve\images\icon_player_record.svg;F:\MVE\apps\umve\images\icon_player_rew.svg;F:\MVE\apps\umve\images\icon_player_start.svg;F:\MVE\apps\umve\images\icon_player_stop.svg;F:\MVE\apps\umve\images\icon_eye.svg;F:\MVE\apps\umve\images\icon_video.svg;F:\MVE\apps\umve\images\icon_refresh.svg;F:\MVE\apps\umve\images\icon_new_file.svg;F:\MVE\apps\umve\images\icon_window.png;F:\MVE\apps\umve\shaders\surface_330.frag;F:\MVE\apps\umve\shaders\surface_330.vert;F:\MVE\apps\umve\shaders\texture_330.frag;F:\MVE\apps\umve\shaders\texture_330.vert;F:\MVE\apps\umve\shaders\wireframe_330.frag;F:\MVE\apps\umve\shaders\wireframe_330.vert;F:\MVE\apps\umve\shaders\overlay_330.frag;F:\MVE\apps\umve\shaders\overlay_330.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\qrc_umve.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating qrc_umve.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
..\..\..\3rdparty\bin\rcc.exe --name umve --output F:/MVE/mve_build/apps/umve/qrc_umve.cpp F:/MVE/apps/umve/umve.qrc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\apps\umve\images\icon_exit.svg;F:\MVE\apps\umve\images\icon_copy.svg;F:\MVE\apps\umve\images\icon_delete.svg;F:\MVE\apps\umve\images\icon_save.svg;F:\MVE\apps\umve\images\icon_about.svg;F:\MVE\apps\umve\images\icon_revert.svg;F:\MVE\apps\umve\images\icon_open_file.svg;F:\MVE\apps\umve\images\icon_image_inspect.svg;F:\MVE\apps\umve\images\icon_export_ply.svg;F:\MVE\apps\umve\images\icon_zoom_in.svg;F:\MVE\apps\umve\images\icon_zoom_out.svg;F:\MVE\apps\umve\images\icon_zoom_reset.svg;F:\MVE\apps\umve\images\icon_zoom_page.svg;F:\MVE\apps\umve\images\icon_exec.svg;F:\MVE\apps\umve\images\icon_new_dir.svg;F:\MVE\apps\umve\images\icon_close.svg;F:\MVE\apps\umve\images\icon_broken.svg;F:\MVE\apps\umve\images\icon_toolbox.svg;F:\MVE\apps\umve\images\icon_clean.svg;F:\MVE\apps\umve\images\icon_export.svg;F:\MVE\apps\umve\images\icon_small_minus.png;F:\MVE\apps\umve\images\icon_small_plus.png;F:\MVE\apps\umve\images\icon_large_minus.png;F:\MVE\apps\umve\images\icon_large_plus.png;F:\MVE\apps\umve\images\icon_screenshot.svg;F:\MVE\apps\umve\images\icon_file.svg;F:\MVE\apps\umve\images\icon_folder.svg;F:\MVE\apps\umve\images\icon_player_eject.svg;F:\MVE\apps\umve\images\icon_player_end.svg;F:\MVE\apps\umve\images\icon_player_fwd.svg;F:\MVE\apps\umve\images\icon_player_pause.svg;F:\MVE\apps\umve\images\icon_player_play.svg;F:\MVE\apps\umve\images\icon_player_record.svg;F:\MVE\apps\umve\images\icon_player_rew.svg;F:\MVE\apps\umve\images\icon_player_start.svg;F:\MVE\apps\umve\images\icon_player_stop.svg;F:\MVE\apps\umve\images\icon_eye.svg;F:\MVE\apps\umve\images\icon_video.svg;F:\MVE\apps\umve\images\icon_refresh.svg;F:\MVE\apps\umve\images\icon_new_file.svg;F:\MVE\apps\umve\images\icon_window.png;F:\MVE\apps\umve\shaders\surface_330.frag;F:\MVE\apps\umve\shaders\surface_330.vert;F:\MVE\apps\umve\shaders\texture_330.frag;F:\MVE\apps\umve\shaders\texture_330.vert;F:\MVE\apps\umve\shaders\wireframe_330.frag;F:\MVE\apps\umve\shaders\wireframe_330.vert;F:\MVE\apps\umve\shaders\overlay_330.frag;F:\MVE\apps\umve\shaders\overlay_330.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\qrc_umve.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating qrc_umve.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
..\..\..\3rdparty\bin\rcc.exe --name umve --output F:/MVE/mve_build/apps/umve/qrc_umve.cpp F:/MVE/apps/umve/umve.qrc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\apps\umve\images\icon_exit.svg;F:\MVE\apps\umve\images\icon_copy.svg;F:\MVE\apps\umve\images\icon_delete.svg;F:\MVE\apps\umve\images\icon_save.svg;F:\MVE\apps\umve\images\icon_about.svg;F:\MVE\apps\umve\images\icon_revert.svg;F:\MVE\apps\umve\images\icon_open_file.svg;F:\MVE\apps\umve\images\icon_image_inspect.svg;F:\MVE\apps\umve\images\icon_export_ply.svg;F:\MVE\apps\umve\images\icon_zoom_in.svg;F:\MVE\apps\umve\images\icon_zoom_out.svg;F:\MVE\apps\umve\images\icon_zoom_reset.svg;F:\MVE\apps\umve\images\icon_zoom_page.svg;F:\MVE\apps\umve\images\icon_exec.svg;F:\MVE\apps\umve\images\icon_new_dir.svg;F:\MVE\apps\umve\images\icon_close.svg;F:\MVE\apps\umve\images\icon_broken.svg;F:\MVE\apps\umve\images\icon_toolbox.svg;F:\MVE\apps\umve\images\icon_clean.svg;F:\MVE\apps\umve\images\icon_export.svg;F:\MVE\apps\umve\images\icon_small_minus.png;F:\MVE\apps\umve\images\icon_small_plus.png;F:\MVE\apps\umve\images\icon_large_minus.png;F:\MVE\apps\umve\images\icon_large_plus.png;F:\MVE\apps\umve\images\icon_screenshot.svg;F:\MVE\apps\umve\images\icon_file.svg;F:\MVE\apps\umve\images\icon_folder.svg;F:\MVE\apps\umve\images\icon_player_eject.svg;F:\MVE\apps\umve\images\icon_player_end.svg;F:\MVE\apps\umve\images\icon_player_fwd.svg;F:\MVE\apps\umve\images\icon_player_pause.svg;F:\MVE\apps\umve\images\icon_player_play.svg;F:\MVE\apps\umve\images\icon_player_record.svg;F:\MVE\apps\umve\images\icon_player_rew.svg;F:\MVE\apps\umve\images\icon_player_start.svg;F:\MVE\apps\umve\images\icon_player_stop.svg;F:\MVE\apps\umve\images\icon_eye.svg;F:\MVE\apps\umve\images\icon_video.svg;F:\MVE\apps\umve\images\icon_refresh.svg;F:\MVE\apps\umve\images\icon_new_file.svg;F:\MVE\apps\umve\images\icon_window.png;F:\MVE\apps\umve\shaders\surface_330.frag;F:\MVE\apps\umve\shaders\surface_330.vert;F:\MVE\apps\umve\shaders\texture_330.frag;F:\MVE\apps\umve\shaders\texture_330.vert;F:\MVE\apps\umve\shaders\wireframe_330.frag;F:\MVE\apps\umve\shaders\wireframe_330.vert;F:\MVE\apps\umve\shaders\overlay_330.frag;F:\MVE\apps\umve\shaders\overlay_330.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\qrc_umve.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="F:\MVE\apps\umve\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule F:/MVE/apps/umve/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -SF:/MVE -BF:/MVE/mve_build --check-stamp-file F:/MVE/mve_build/apps/umve/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\CMake\share\cmake-3.18\Modules\CMakeParseArguments.cmake;D:\CMake\share\cmake-3.18\Modules\FindGLEW.cmake;D:\CMake\share\cmake-3.18\Modules\FindOpenGL.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5Config.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5ConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;F:\MVE\3rdparty\lib\cmake\glew\CopyImportedTargetProperties.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-config.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-debug.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-release.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets.cmake;F:\MVE\apps\umve\umve.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\MVE\mve_build\apps\umve\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule F:/MVE/apps/umve/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -SF:/MVE -BF:/MVE/mve_build --check-stamp-file F:/MVE/mve_build/apps/umve/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\CMake\share\cmake-3.18\Modules\CMakeParseArguments.cmake;D:\CMake\share\cmake-3.18\Modules\FindGLEW.cmake;D:\CMake\share\cmake-3.18\Modules\FindOpenGL.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5Config.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5ConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;F:\MVE\3rdparty\lib\cmake\glew\CopyImportedTargetProperties.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-config.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-debug.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-release.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets.cmake;F:\MVE\apps\umve\umve.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\MVE\mve_build\apps\umve\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule F:/MVE/apps/umve/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -SF:/MVE -BF:/MVE/mve_build --check-stamp-file F:/MVE/mve_build/apps/umve/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\CMake\share\cmake-3.18\Modules\CMakeParseArguments.cmake;D:\CMake\share\cmake-3.18\Modules\FindGLEW.cmake;D:\CMake\share\cmake-3.18\Modules\FindOpenGL.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5Config.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5ConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;F:\MVE\3rdparty\lib\cmake\glew\CopyImportedTargetProperties.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-config.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-debug.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-release.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets.cmake;F:\MVE\apps\umve\umve.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\MVE\mve_build\apps\umve\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule F:/MVE/apps/umve/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -SF:/MVE -BF:/MVE/mve_build --check-stamp-file F:/MVE/mve_build/apps/umve/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\CMake\share\cmake-3.18\Modules\CMakeParseArguments.cmake;D:\CMake\share\cmake-3.18\Modules\FindGLEW.cmake;D:\CMake\share\cmake-3.18\Modules\FindOpenGL.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5Config.cmake;F:\MVE\3rdparty\lib\cmake\Qt5\Qt5ConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Concurrent\Qt5ConcurrentConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5OpenGL\Qt5OpenGLConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;F:\MVE\3rdparty\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;F:\MVE\3rdparty\lib\cmake\glew\CopyImportedTargetProperties.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-config.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-debug.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets-release.cmake;F:\MVE\3rdparty\lib\cmake\glew\glew-targets.cmake;F:\MVE\apps\umve\umve.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\MVE\mve_build\apps\umve\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="F:\MVE\apps\umve\batchoperations.cc" />
    <ClCompile Include="F:\MVE\apps\umve\fshelpers.cc" />
    <ClCompile Include="F:\MVE\apps\umve\glwidget.cc" />
    <ClCompile Include="F:\MVE\apps\umve\guihelpers.cc" />
    <ClCompile Include="F:\MVE\apps\umve\jobqueue.cc" />
    <ClCompile Include="F:\MVE\apps\umve\mainwindow.cc" />
    <ClCompile Include="F:\MVE\apps\umve\mainwindowtab.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_aabb_creator.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_axis_renderer.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_dm_triangulate.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_frusta_base.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_frusta_scene_renderer.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_mesh_renderer.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_offscreen_renderer.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_plane_creator.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_rephotographer.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_selection.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_sfm_renderer.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_sphere_creator.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\addin_state.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\camera_sequence.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_addins\mesh_list.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_inspect\addin_manager.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scene_inspect\scene_inspect.cc" />
    <ClCompile Include="F:\MVE\apps\umve\scenemanager.cc" />
    <ClCompile Include="F:\MVE\apps\umve\sceneoverview.cc" />
    <ClCompile Include="F:\MVE\apps\umve\selectedview.cc" />
    <ClCompile Include="F:\MVE\apps\umve\umve.cc" />
    <ClCompile Include="F:\MVE\apps\umve\viewinspect\imageinspector.cc" />
    <ClCompile Include="F:\MVE\apps\umve\viewinspect\imageoperations.cc" />
    <ClCompile Include="F:\MVE\apps\umve\viewinspect\scrollimage.cc" />
    <ClCompile Include="F:\MVE\apps\umve\viewinspect\tonemapping.cc" />
    <ClCompile Include="F:\MVE\apps\umve\viewinspect\viewinspect.cc" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_batchoperations.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_clickimage.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_dlldefines.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_fshelpers.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_glwidget.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_guihelpers.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_jobqueue.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_mainwindow.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_mainwindowtab.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_aabb_creator.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_axis_renderer.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_base.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_dm_triangulate.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_base.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_frusta_scene_renderer.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_mesh_renderer.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_offscreen_renderer.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_plane_creator.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_rephotographer.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_selection.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sfm_renderer.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_sphere_creator.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_addin_state.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_camera_sequence.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_addins\moc_mesh_list.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_inspect\moc_addin_manager.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\scene_inspect\moc_scene_inspect.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_scenemanager.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_sceneoverview.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\moc_selectedview.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\viewinspect\moc_imageinspector.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\viewinspect\moc_imageoperations.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\viewinspect\moc_scrollimage.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\viewinspect\moc_tonemapping.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\viewinspect\moc_viewinspect.cpp" />
    <ClCompile Include="F:\MVE\mve_build\apps\umve\qrc_umve.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="F:\MVE\mve_build\ZERO_CHECK.vcxproj">
      <Project>{969AC39C-A636-3ACE-9F77-97A95B55FC92}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="F:\MVE\mve_build\libs\mve\mve.vcxproj">
      <Project>{2986CCFD-EDB1-379D-9FF9-AFB03D146BDA}</Project>
      <Name>mve</Name>
    </ProjectReference>
    <ProjectReference Include="F:\MVE\mve_build\libs\dmrecon\mve_dmrecon.vcxproj">
      <Project>{864100DD-6FE8-3F19-BE87-00585AC7EF77}</Project>
      <Name>mve_dmrecon</Name>
    </ProjectReference>
    <ProjectReference Include="F:\MVE\mve_build\libs\math\mve_math.vcxproj">
      <Project>{7793D768-3616-3F28-B32B-9A77CFE49D6D}</Project>
      <Name>mve_math</Name>
    </ProjectReference>
    <ProjectReference Include="F:\MVE\mve_build\libs\ogl\mve_ogl.vcxproj">
      <Project>{3B087C96-24A6-3AAB-8482-A542AAAF69DA}</Project>
      <Name>mve_ogl</Name>
    </ProjectReference>
    <ProjectReference Include="F:\MVE\mve_build\libs\sfm\mve_sfm.vcxproj">
      <Project>{01175087-1BD0-356E-86E1-C3C3B195829E}</Project>
      <Name>mve_sfm</Name>
    </ProjectReference>
    <ProjectReference Include="F:\MVE\mve_build\libs\util\mve_util.vcxproj">
      <Project>{F5889009-109D-3156-9D53-B7535A401761}</Project>
      <Name>mve_util</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>